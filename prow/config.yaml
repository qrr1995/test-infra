# how to configure new job: https://github.com/kubernetes/test-infra/blob/master/prow/jobs.md#how-to-configure-new-jobs
prowjob_namespace: default
pod_namespace: test-pods
log_level: debug

presubmits:
  pingcap/SRE:
  - name: jira-sync-build
    labels:
      preset-sre-bot-ssh: "true"
    decorate: true
    skip_submodules: true
    clone_uri: "git@github.com:pingcap/SRE.git"
    context: jira-sync-build         
    max_concurrency: 10      
    run_if_changed: "misc/sync-jira/*"
    # spec: {}                 
    # branches: []             
    # skip_branches: []        
    trigger: "/build" 
    rerun_command: "/build"
    spec:
      containers:
      - image: hub.pingcap.net/jenkins/centos7_golang-1.12:cached_root
        securityContext:
          privileged: true
        command: ["bash", "-c"]
        args:
        - "cd misc/sync-jira; make; echo uploading; curl -F bin/sync-jira=@bin/sync-jira ${FILE_SERVER_URL}/upload ;exit $?"
    
  qrr1995/tidb:
  - name:  pull-tidb-unittests-0            # As for periodics.
    decorate: true           # As for periodics.
#    clone_depth: 20
    skip_submodules: true
    always_run: true         # Run for every PR, or only when requested.
    # skip_report: true        # Whether to skip setting a status on GitHub.
    context: unit-test/0         # Status context. Defaults to the job name.
    max_concurrency: 10      # As for postsubmits.
    spec: {}                 # As for periodics.
    branches: []             # As for postsubmits.
    skip_branches: []        # As for postsubmits.
    trigger: "/run-unit-tests" # Regexp, see discussion.
    rerun_command: "/run-unit-tests"  # String, see discussion.
    spec:
      containers:
      - image: hub.pingcap.net/jenkins/centos7_golang-1.12:cached_root
        securityContext:
          privileged: true
        command: ["bash", "-c"]
        args:
        - "sleep 500"
        #- "sleep 100;mkdir -p /secrets/ssh/ssh-key-secret; mkdir -p /logs;bash <(curl -s http://fileserver.pingcap.net/download/prow/clone.sh);mkdir -p /secrets/ssh/ssh-key-secret; mkdir -p /logs ; sleep 120"
  - name:  pull-tidb-unittests-2            # As for periodics.
    decorate: true           # As for periodics.
    always_run: true         # Run for every PR, or only when requested.
    max_concurrency: 10      # As for postsubmits.
    spec: {}                 # As for periodics.
    branches: []             # As for postsubmits.
    skip_branches: []        # As for postsubmits.
    trigger: "/run-unit-tests" # Regexp, see discussion.
    rerun_command: "/run-unit-tests"  # String, see discussion.

    spec:
      containers:
      - image: hub.pingcap.net/jenkins/centos7_golang-1.12:cached_root
        name: test_go 
        securityContext:
          privileged: true
        command: ["bash", "-c"]
        args:
        - "echo How long does this job take for prepare?"

  qrr1995/tidb-operator:
  - name: pull-kind-rebuild  # convention: (job type)-(repo name)-(suite name)
    labels:
      preset-service-account: "true"
      preset-dind-enabled: "true"
      preset-kind-volume-mounts: "true"
    decorate: true
    always_run: true
    trigger: "/run-kind-rebuild" # Regexp, see discussion.
    rerun_command: "/run-kind-rebuild"  # String, see discussio
    spec:
      containers:
      - image: hub.pingcap.net/k8s-testimages/bootstrap:latest-kind 
        securityContext:
          privileged: true    
        command: ["bash", "-c"]
        args:
        - "date"
        #- "chmod +x /usr/local/bin/kind; service docker start;kind create cluster;export KUBECONFIG=\"$(kind get kubeconfig-path --name=\"kind\")\"; kubectl cluster-info;sleep 30;kubectl get no; kubectl get no ;kubectl -n kube-system get po ;sleep 60"
        volumeMounts:
        - name: dind-storage
          mountPath: /var/lib/docker
      volumes:
      - name: dind-storage
        emptyDir: {}
  - name: pull-operator-build
    decorate: true
    always_run: true
    trigger: "/build" # Regexp, see discussion.
    rerun_command: "/build"  # String, see discussio
    spec:
      containers:
      - image: hub.pingcap.net/jenkins/centos7_golang-1.12:cached_root 
        securityContext:
          privileged: true
        command: ["bash", "-c"]
        args:
        - "go version"

deck:
  spyglass:
    size_limit: 50000000 # 50MB
    testgrid_config: gs://k8s-testgrid/config
    testgrid_root: https://testgrid.k8s.io/
    gcs_browser_prefix: https://gcsweb.k8s.io/gcs/
     
    viewers:
      "started.json|finished.json":
      - "metadata"
      "build-log.txt":
      - "buildlog"
      "artifacts/junit.*\\.xml":
      - "junit"
      "artifacts/filtered.cov":
      - "coverage"
    announcement: "testgrid and gcsweb are not availble now :("
    
  rerun_auth_config:
    github_users:
      - qrr1995
#    github_team_ids:
#      - 2009231 #test-infra-admins
plank:
  allow_cancellations: true # whether to delete ProwJobs' pod (true) or not (false) when new instances are triggered for the same PR
  # used to link to job results for decorated jobs (with pod utilities)
  job_url_prefix: 'http://prow.pingcap.net/view/gcs'
  # used to link to job results for non decorated jobs (without pod utilities)
  job_url_template: 'http://prow.pingcap.net/view/gcs/pingcap-security-prow/pr-logs/pull/{{.Spec.Refs.Repo}}/{{with index .Spec.Refs.Pulls 0}}{{.Number}}{{end}}/{{.Spec.Job}}/{{.Status.BuildID}}'
  report_template: '[Full PR test history](https://prow.pingcap.net/pr-history?org={{.Spec.Refs.Org}}&repo={{.Spec.Refs.Repo}}&pr={{with index .Spec.Refs.Pulls 0}}{{.Number}}{{end}})'
  default_decoration_config:
    timeout: 4h
    grace_period: 15s
    utility_images: # pull specs for container images used to construct job pods
      clonerefs: "hub.pingcap.net/k8s-prow/clonerefs:v20190813-2e6c6ee18_cachedv3"
      initupload: "hub.pingcap.net/k8s-prow/initupload:v20190813-2e6c6ee18-v2"
      entrypoint: "gcr.io/k8s-prow/entrypoint:v20190813-2e6c6ee18"
      sidecar: "gcr.io/k8s-prow/sidecar:v20190813-2e6c6ee18"
    gcs_configuration: # configuration for uploading job results to GCS
      bucket: "pingcap-security-prow"
      path_strategy: explicit # or `legacy`, `single`
      default_org: <github-org> # should not need this if `strategy` is set to explicit
      default_repo: <github-repo> # should not need this if `strategy` is set to explicit
    gcs_credentials_secret: "igcs-credentials-secret" 
 # the name of the secret that stores the GCP service account credential JSON file, it expects the secret's key to be `service-account.json`
    ssh_key_secrets:
      - ssh-key-secret #  name of the secret that stores the bot's ssh keys for GitHub, doesn't matter what the key of the map is and it will just uses the values


sinker:
  resync_period: 10s
  max_prowjob_age: 48h 
  max_pod_age: 30m 

tide:
  sync_period: 30s
  merge_method:
    kubesphere-test/prow-tutorial: squash

  target_url: http://prow.pingcap.net/tide
  pr_status_base_url: http://prow.pingcap.net/pr
  queries:
  - repos:
    - qrr1995/tidb 
    labels:
    - lgtm
    - approved
    missingLabels:
    - do-not-merge
    - do-not-merge/work-in-progress
    - do-not-merge/hold
    - do-not-merge/blocked-paths
    - do-not-merge/invalid-owners-file
  - repos:
    - qrr1995/tidb-operator
    labels:
    - lgtm
    - approved
    missingLabels:
    - do-not-merge
    - do-not-merge/work-in-progress
    - do-not-merge/hold
    - do-not-merge/blocked-paths
    - do-not-merge/invalid-owners-file
  - repos:
    - pingcap/SRE
    labels:
    - lgtm
    - approved
    missingLabels:
    - do-not-merge
    - do-not-merge/work-in-progress
    - do-not-merge/hold
    - do-not-merge/blocked-paths
    - do-not-merge/invalid-owners-file
  context_options:
    from-branch-protection: true
    skip-unknown-contexts: true



#periodics:
#- interval: 24h
#  name: echo-test
#  spec:
 #   containers:
  #  - image: alpine
   #   command: ["/bin/date"]

github_reporter:
  job_types_to_report:
  - presubmit
  - postsubmit

presets:
- env:
  # enable GOPROXY by default
  - name: GOPROXY
    value: "https://proxy.golang.org"
  - name: FILE_SERVER_URL
    value: "http://fileserver.pingcap.net"
# volume mounts for kind
- labels:
    preset-kind-volume-mounts: "true"
  volumeMounts:
    - mountPath: /lib/modules
      name: modules
      readOnly: true
    - mountPath: /sys/fs/cgroup
      name: cgroup
  volumes:
    - name: modules
      hostPath:
        path: /lib/modules
        type: Directory
    - name: cgroup
      hostPath:
        path: /sys/fs/cgroup
        type: Directory
- labels:
    preset-sre-bot-ssh: "true"
  volumes:
  - name: ssh
    secret:
      defaultMode: 0400
      secretName: ssh-key-secret
  volumeMounts:
  - name: ssh
    mountPath: /secrets/ssh/ssh-key-secret/ 
    readOnly: true
# docker-in-docker (with images/bootstrap) preset
# # NOTE: using this also requires using that image,
# # ensuring you run your test under either the ENTRYPOINT or:
# # /usr/local/bin/runner my-test-command --foo --bar
# # AND setting the following on your PodSpec:
# # securityContext:
# #   privileged: true
- labels:
    preset-dind-enabled: "true"
  env:
  - name: DOCKER_IN_DOCKER_ENABLED
    value: "true"
  volumes:
  - name: docker-graph
    emptyDir: {}
  volumeMounts:
  - name: docker-graph
    mountPath: /docker-graph
